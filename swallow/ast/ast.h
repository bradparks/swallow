#ifndef AST_H
#define AST_H
#include "Program.h"
#include "UnaryOperator.h"
#include "BinaryOperator.h"
#include "InOutParameter.h"


#include "IntegerLiteral.h"
#include "FloatLiteral.h"
#include "StringLiteral.h"
#include "CompileConstant.h"

#include "ArrayLiteral.h"
#include "DictionaryLiteral.h"

#include "Identifier.h"
#include "TypedPattern.h"
#include "GenericArgument.h"
#include "Comment.h"
#include "MemberAccess.h"
#include "SubscriptAccess.h"


#include "TypeCheck.h"
#include "TypeCast.h"
#include "Assignment.h"
#include "ConditionalOperator.h"
#include "ParenthesizedExpression.h"
#include "FunctionCall.h"
#include "InitializerReference.h"
#include "SelfExpression.h"
#include "DynamicType.h"
#include "ForcedValue.h"
#include "OptionalChaining.h"
#include "Closure.h"

#include "BreakStatement.h"
#include "CodeBlock.h"
#include "ContinueStatement.h"
#include "DoLoop.h"
#include "FallthroughStatement.h"
#include "ForLoop.h"
#include "ForInLoop.h"
#include "IfStatement.h"
#include "LabeledStatement.h"
#include "ReturnStatement.h"
#include "Statement.h"
#include "SwitchCase.h"
#include "CaseStatement.h"
#include "WhileLoop.h"

#include "ValueBindingPattern.h"
#include "Tuple.h"
#include "EnumCasePattern.h"

#include "TypeNode.h"
#include "TupleType.h"
#include "TypeIdentifier.h"
#include "FunctionType.h"
#include "ArrayType.h"
#include "OptionalType.h"
#include "ImplicitlyUnwrappedOptional.h"
#include "ProtocolComposition.h"
#include "Attribute.h"

#include "Declaration.h"
#include "Import.h"
#include "ValueBinding.h"
#include "ValueBindings.h"
#include "ComputedProperty.h"
#include "TypeAlias.h"
#include "FunctionDef.h"
#include "Parameters.h"
#include "Parameter.h"
#include "EnumDef.h"
#include "StructDef.h"
#include "ClassDef.h"
#include "ProtocolDef.h"
#include "InitializerDef.h"
#include "DeinitializerDef.h"
#include "ExtensionDef.h"
#include "SubscriptDef.h"
#include "OperatorDef.h"
#include "GenericParameters.h"
#include "GenericConstraint.h"

#endif//AST_H
